zlab = 'Petal.Length',
phi = 20, #rotação vertical
theta = 45, #rotação horizontal
bty = 'g', #tema do gráfico
type = 'h', #com
colvar = as.numeric(iris$Species),
colkey = list(
at = 1:3,
labels = levels(iris$Species))
)
scatter3D(x = iris$Sepal.Length, #va. do eixo x
y = iris$Sepal.Width, #va. do eixo y
z = iris$Petal.Length, #va. do eixo z
ticktype = 'detailed',
xlab = 'Sepal.Length',
ylab = 'Speal.Width',
zlab = 'Petal.Length',
phi = 20, #rotação vertical
theta = 45, #rotação horizontal
bty = 'g', #tema do gráfico
type = 'h', #linhas de projeção
colvar = as.numeric(iris$Species),
colkey = list(
at = 1:3,
labels = levels(iris$Species))
)
scatter3D(x = iris$Sepal.Length, #va. do eixo x
y = iris$Sepal.Width, #va. do eixo y
z = iris$Petal.Length, #va. do eixo z
ticktype = 'detailed',
xlab = 'Sepal.Length',
ylab = 'Speal.Width',
zlab = 'Petal.Length',
phi = 20, #rotação vertical
theta = 45, #rotação horizontal
bty = 'g', #tema do gráfico
type = 'h', #linhas de projeção
colvar = as.numeric(iris$Species),
colkey = list(
at = 1:3,
labels = levels(iris$Species))
)
as.numeric(iris$Species)
scatter3D(x = iris$Sepal.Length, #va. do eixo x
y = iris$Sepal.Width, #va. do eixo y
z = iris$Petal.Length, #va. do eixo z
ticktype = 'detailed',
xlab = 'Sepal.Length',
ylab = 'Speal.Width',
zlab = 'Petal.Length',
phi = 20, #rotação vertical
theta = 45, #rotação horizontal
bty = 'g', #tema do gráfico
type = 'h', #linhas de projeção
colvar = iris$Species,
colkey = list(
at = 1:3,
labels = levels(iris$Species))
)
)
)
scatter3D(x = iris$Sepal.Length, #va. do eixo x
y = iris$Sepal.Width, #va. do eixo y
z = iris$Petal.Length, #va. do eixo z
ticktype = 'detailed',
xlab = 'Sepal.Length',
ylab = 'Speal.Width',
zlab = 'Petal.Length',
phi = 20, #rotação vertical
theta = 45, #rotação horizontal
bty = 'g', #tema do gráfico
type = 'h', #linhas de projeção
colvar = as.numeric(iris$Species),
colkey = list(
at = 1:3,
labels = levels(iris$Species))
)
scatter3D(x = iris$Sepal.Length, #va. do eixo x
y = iris$Sepal.Width, #va. do eixo y
z = iris$Petal.Length, #va. do eixo z
ticktype = 'detailed',
xlab = 'Sepal.Length',
ylab = 'Speal.Width',
zlab = 'Petal.Length',
phi = 20, #rotação vertical
theta = 45, #rotação horizontal
bty = 'g', #tema do gráfico
type = 'h', #linhas de projeção
colvar = as.numeric(iris$Species),
colkey = list(
at = 3:6,
labels = levels(iris$Species))
)
scatter3D(x = iris$Sepal.Length, #va. do eixo x
y = iris$Sepal.Width, #va. do eixo y
z = iris$Petal.Length, #va. do eixo z
ticktype = 'detailed',
xlab = 'Sepal.Length',
ylab = 'Speal.Width',
zlab = 'Petal.Length',
phi = 20, #rotação vertical
theta = 45, #rotação horizontal
bty = 'g', #tema do gráfico
type = 'h', #linhas de projeção
colvar = as.numeric(iris$Species),
colkey = list(
at = 1:3,
labels = levels(iris$Species))
)
head(iris)
reshape2::melt(iris, id.vars = 'Species')
iris_v <- reshape2::melt(iris, id.vars = 'Species')
iris_v
head(iris_v)
q()
x_1 <- c(3, 4, 2, 6, 8, 2, 5)
x_1
x_1 <- c(3, 4, 2, 6, 8, 2, 5)
x_1
sum(x_1 <- c(3, 4, 2, 6, 8, 2, 5))
sum(x_1)/length(x_1)
var(x_1)
length(x_1)
sum(x_1)/length(x_1)
sum(x_2)/length(x_2)
x_2 <- c(5, 5.5, 4, 7, 10, 5, 7.5)
sum(x_2)/length(x_2)
sum(x_2)
x_2
function(x) {sum(x - mean(x))/length(x)}
var_cal <- function(x){sum(x - mean(x))/length(x)}
var_cal
var_cal(x_1)
var(x_1)
var_cal <- function(x){sum((x - mean(x))^2)/length(x)}
var_cal(x_1)
var(x_1)
var_cal <- function(x){sum((x - mean(x))^2)/length(x) - 1}
var_cal(x_1)
x_1 - mean(x_1)
(x_1 - mean(x_1))^2
sum((x_1 - mean(x_1))^2)
sum((x_1 - mean(x_1))^2)/length(x_1)
sum(x_1)/length(x_1)
mean(x_1)
mean(x_2)
sum(x_2)/length(x_2)
sum((x_1 - mean(x_1))^2)/length(x_1)
x_2 - mean(x_2)
(x_2 - mean(x_2))^2
sum((x_2 - mean(x_2))^2)
sum((x_2 - mean(x_2))^2)/length(x_2)
sum((x_2 - mean(x_2))^2)/length(x_2)
sum((x_1 - mean(x_1))^2)/length(x_1) #varia. de x1
sum((x_2 - mean(x_2))^2)/length(x_2) #varia. de x2
(x_1 - mean(x_2))*(x_2 - mean(x_2))
sum((x_1 - mean(x_1))^2)/length(x_1) #varia. de x1
sum((x_2 - mean(x_2))^2)/length(x_2) #varia. de x2
var(x_1)
var_x1 <- sum((x_1 - mean(x_1))^2)/length(x_1) #varia. de x1
var_x2 <- sum((x_2 - mean(x_2))^2)/length(x_2) #varia. de x2
sum((x_1 - mean(x_2))*(x_2 - mean(x_2)))/(sqrt(var_x1*var_x2))
sum((x_1 - mean(x_2))*(x_2 - mean(x_2)))/(sqrt(var_x1*var_x2))
var_x1 <- sum((x_1 - mean(x_1))^2)/length(x_1) #varia. de x1
var_x1
var_x2 <- sum((x_2 - mean(x_2))^2)/length(x_2) #varia. de x2
var_x2
sum((x_1 - mean(x_2))*(x_2 - mean(x_2)))/(sqrt(var_x1*var_x2))
(x_1 - mean(x_1))*(x_2 - mean(x_2))
sum((x_1 - mean(x_1))*(x_2 - mean(x_2)))/length(x_1)
sum((x_1 - mean(x_1))*(x_2 - mean(x_2)))/length(x_1)
mean(x_1*x_2) - mean(x_1)*mean(x_2)
x_2 <- c(18.95, 19, 17.95, 15.54, 14, 12.95, 8.94, 7.49, 6, 3.99)
x_2
length(x_2)
x_1 <- 1:11
x_2 <- c(18.95, 19, 17.95, 15.54, 14, 12.95, 8.94, 7.49, 6, 3.99)
x_1
x_2
library(magrittr)
library(ggplot2)
data.frame(x_1, x_2) %>%
ggplot(aes(x = x_1,
y = x_2)) +
geom_point()
x_1 <- 1:11
x_1
x_1
length(x_2)
length(x_1)
x_1 <- c(1, 2, 3, 3, 4, 5, 6, 8, 9, 11)
x_2 <- c(18.95, 19, 17.95, 15.54, 14, 12.95, 8.94, 7.49, 6, 3.99)
data.frame(x_1, x_2) %>%
ggplot(aes(x = x_1,
y = x_2)) +
geom_point()
dev.off()
# Exercício 1.2 -----------------------------------------------------------
x_1 <- c(1, 2, 3, 3, 4, 5, 6, 8, 9, 11)
x_2 <- c(18.95, 19, 17.95, 15.54, 14, 12.95, 8.94, 7.49, 6, 3.99)
data.frame(x_1, x_2) %>%
ggplot(aes(x = x_1,
y = x_2)) +
geom_point()
dev.off()
# Cabeçalho ---------------------------------------------------------------
# [Copyleft] Ciências Exatas: Estatística e Experimentação Agronômica (ESALQ-USP)
# [wyhirai@usp.br] Hirai W. Y.
# data: 10/03/2020
rm(list=ls(all=T));options(device = 'windows');cat("\f")
library(magrittr)
library(ggplot2)
# Exercício 1.1 -----------------------------------------------------------
x_1 <- c(3, 4, 2, 6, 8, 2, 5)
x_2 <- c(5, 5.5, 4, 7, 10, 5, 7.5)
sum(x_1)/length(x_1) #média amostral de x1
sum(x_2)/length(x_2) #média amostral de x2
var_x1 <- sum((x_1 - mean(x_1))^2)/length(x_1) #varia. de x1
var_x2 <- sum((x_2 - mean(x_2))^2)/length(x_2) #varia. de x2
sum((x_1 - mean(x_1))*(x_2 - mean(x_2)))/length(x_1)
smean(x_1*x_2) - mean(x_1)*mean(x_2)
# Exercício 1.2 -----------------------------------------------------------
x_1 <- c(1, 2, 3, 3, 4, 5, 6, 8, 9, 11)
x_2 <- c(18.95, 19, 17.95, 15.54, 14, 12.95, 8.94, 7.49, 6, 3.99)
data.frame(x_1, x_2) %>%
ggplot(aes(x = x_1,
y = x_2)) +
geom_point()
mean(x_1*x_2) - mean(x_1)*mean(x_2)
x_1 <- c(1, 2, 3, 3, 4, 5, 6, 8, 9, 11)
x_2 <- c(18.95, 19, 17.95, 15.54, 14, 12.95, 8.94, 7.49, 6, 3.99)
data.frame(x_1, x_2) %>%
ggplot(aes(x = x_1,
y = x_2)) +
geom_point()
data.frame(x_1, x_2) %>%
ggplot(aes(x = x_1,
y = x_2)) +
geom_point(size = 2)
plot_12 <- data.frame(x_1, x_2) %>%
ggplot(aes(x = x_1,
y = x_2))
plot_12 + geom_point(size = 2)
plot_12 + geom_dotplot()
data.frame(x_1, x_2) %>%
ggplot(aes(x = x_1,
y = x_2))
data.frame(x_1, x_2) %>%
ggplot(aes(x = x_1,
y = x_2)) +
geom_point(size = 2)
data.frame(x_1, x_2) %>%
ggplot(aes(y = x_1)) +
geom_dot
data.frame(x_1, x_2) %>%
ggplot(aes(y = x_1)) +
geom_dotplot()
dados2 <- data.frame(x_1, x_2)
par(mar=c(3,4,2,2))
dados2 <- data.frame(x_1, x_2)
par(mar=c(3,4,2,2))
plot(dados2$x1, rep(1,10), xlim=c(0,12), ylim=c(1,1), xlab="", ylab="",axes = F)
axis(side = 3,at = seq(from = 0, to = 12, by = 2))
par(mar=c(5,3,2,2))
plot(rep(1,10), dados2$x2, xlim=c(1,1), ylim=c(0,20), xlab="", ylab="",axes = F)
axis(side = 4,at = seq(from = 0, to = 20, by = 5))
plot(dados2$x1, rep(1,10), xlim=c(0,12), ylim=c(1,1), xlab="", ylab="",axes = F)
dados2 <- data.frame(x_1, x_2)
dados2 <- data.frame(x_1, x_2)
dados2 <- data.frame(x_1, x_2); colnames(dados2) <- c('x1', 'x2')
par(mar=c(5,4,2,2))
plot(dados2$x1, dados2$x2, xlim=c(0,12), ylim=c(0,20), xlab="Anos", ylab="Preços milhares de dolares")
## Em seguida, plote o diagrama de pontos sob o gráfico de dispersão e o diagrama de pontos à esquerda dele.
## Alguma configuração do eixo é apenas para melhorar a plotagem.
par(mar=c(3,4,2,2))
plot(dados2$x1, rep(1,10), xlim=c(0,12), ylim=c(1,1), xlab="", ylab="",axes = F)
axis(side = 3,at = seq(from = 0, to = 12, by = 2))
par(mar=c(5,3,2,2))
plot(rep(1,10), dados2$x2, xlim=c(1,1), ylim=c(0,20), xlab="", ylab="",axes = F)
axis(side = 4,at = seq(from = 0, to = 20, by = 5))
data.frame(x_1, x_2) %>%
ggplot(aes(y = x_1)) +
geom_dotplot()
x_1 <- c(1, 2, 3, 3, 4, 5, 6, 8, 9, 11)
x_2 <- c(18.95, 19, 17.95, 15.54, 14, 12.95, 8.94, 7.49, 6, 3.99)
data.frame(x_1, x_2) %>%
ggplot(aes(x = x_1,
y = x_2)) +
geom_point(size = 2)
data.frame(x_1, x_2) %>%
ggplot(aes(y = x_1)) +
geom_dotplot()
data.frame(x_1, x_2) %>%
ggplot(aes(x = x_1)) +
geom_dotplot()
data.frame(x_1, x_2) %>%
ggplot(aes(x = x_2)) +
geom_dotplot()
data.frame(x_1, x_2) %>%
ggplot(aes(x = x_1)) +
geom_dotplot(size = 2)
data.frame(x_1, x_2) %>%
ggplot(aes(x = x_2)) +
geom_dotplot(size = 1)
data.frame(x_1, x_2) %>%
ggplot(aes(x = x_2)) +
geom_dotplot(size = .1)
data.frame(x_1, x_2) %>%
ggplot(aes(x = x_2)) +
geom_dotplot(size = .1, pch = 2)
data.frame(x_1, x_2) %>%
ggplot(aes(x = x_1,
y = x_2)) +
geom_point(size = 2)
data.frame(x_1, x_2) %>%
ggplot(aes(x = x_1)) +
geom_dotplot(size = 2)
data.frame(x_1, x_2) %>%
ggplot(aes(x = x_2)) +
geom_dotplot(size = .1, pch = 2)
data.frame(x_1, x_2) %>%
ggplot(aes(x = x_1,
y = x_2)) +
geom_point(size = 2)
data.frame(x_1, x_2) %>%
ggplot(aes(x = x_1,
y = x_2)) +
geom_point(size = 5)
data.frame(x_1, x_2) %>%
ggplot(aes(x = x_1)) +
geom_dotplot(size = 2)
data.frame(x_1, x_2) %>%
ggplot(aes(x = x_2)) +
geom_dotplot(size = .1, pch = 2)
plot_x12 <- data.frame(x_1, x_2) %>%
ggplot(aes(x = x_1,
y = x_2)) +
geom_point(size = 5)
plot_x1 <- data.frame(x_1, x_2) %>%
ggplot(aes(x = x_1)) +
geom_dotplot(size = 2)
plot_x2 <- data.frame(x_1, x_2) %>%
ggplot(aes(x = x_2)) +
geom_dotplot(size = .1, pch = 2)
ggpubr::ggarrange(plot_x1, NULL, plot_x12, plot_x2,
ncol = 2, nrow = 2,  align = "hv",
widths = c(2, 1), heights = c(1, 2))
plot_x2 <- data.frame(x_1, x_2) %>%
ggplot(aes(x = x_2)) +
geom_dotplot() +
rotate()
plot_x2 <- data.frame(x_1, x_2) %>%
ggplot(aes(x = x_2)) +
geom_dotplot() +
coord_flip()
ggpubr::ggarrange(plot_x1, NULL, plot_x12, plot_x2,
ncol = 2, nrow = 2,  align = "hv",
widths = c(2, 1), heights = c(1, 2))
ggpubr::ggarrange(plot_x1, NULL, plot_x12, plot_x2,
ncol = 2, nrow = 2,  align = "hv",
widths = c(2, 2), heights = c(1, 2))
ggpubr::ggarrange(plot_x1, NULL, plot_x12, plot_x2,
ncol = 2, nrow = 2,  align = "hv",
widths = c(2, .2), heights = c(1, 2))
ggpubr::ggarrange(plot_x1, NULL, plot_x12, plot_x2,
ncol = 2, nrow = 2,  align = "hv",
widths = c(2, .9), heights = c(1, 2))
ggpubr::ggarrange(plot_x1, NULL, plot_x12, plot_x2,
ncol = 2, nrow = 2,  align = "hv",
widths = c(1, .9), heights = c(1, 2))
ggpubr::ggarrange(plot_x1, NULL, plot_x12, plot_x2,
ncol = 2, nrow = 2,  align = "hv",
widths = c(3, .9), heights = c(1, 2))
ggpubr::ggarrange(plot_x1, NULL, plot_x12, plot_x2,
ncol = 2, nrow = 2,  align = "hv",
widths = c(3, .9), heights = c(.9, 2))
ggpubr::ggarrange(plot_x1, NULL, plot_x12, plot_x2,
ncol = 2, nrow = 2,  align = "hv",
widths = c(3, .9), heights = c(.9, 3))
plot_x12 <- data.frame(x_1, x_2) %>%
ggplot(aes(x = x_1,
y = x_2)) +
geom_point(size = 5)
plot_x1 <- data.frame(x_1, x_2) %>%
ggplot(aes(x = x_1)) +
geom_dotplot()
plot_x2 <- data.frame(x_1, x_2) %>%
ggplot(aes(x = x_2)) +
geom_dotplot() +
coord_flip()
ggpubr::ggarrange(plot_x1, NULL, plot_x12, plot_x2,
ncol = 2, nrow = 2,  align = "hv",
widths = c(3, .9), heights = c(.9, 3))
plot_x2 <- data.frame(x_1, x_2) %>%
ggplot(aes(x = x_2)) +
geom_dotplot(dotsize = 2) +
coord_flip()
plot_x2
plot_x2 <- data.frame(x_1, x_2) %>%
ggplot(aes(x = x_2)) +
geom_dotplot(dotsize = .5) +
coord_flip()
plot_x2
plot_x12 <- data.frame(x_1, x_2) %>%
ggplot(aes(x = x_1,
y = x_2)) +
geom_point(size = 5)
plot_x1 <- data.frame(x_1, x_2) %>%
ggplot(aes(x = x_1)) +
geom_dotplot(dotsize = .5)
plot_x2 <- data.frame(x_1, x_2) %>%
ggplot(aes(x = x_2)) +
geom_dotplot(dotsize = .5) +
coord_flip()
ggpubr::ggarrange(plot_x1, NULL, plot_x12, plot_x2,
ncol = 2, nrow = 2,  align = "hv",
widths = c(3, .9), heights = c(.9, 3))
ggpubr::ggarrange(plot_x1, NULL, plot_x12, plot_x2,
ncol = 2, nrow = 2,  align = "hv",
widths = c(3, .9), heights = c(1, 3))
ggpubr::ggarrange(plot_x1, NULL, plot_x12, plot_x2,
ncol = 2, nrow = 2,  align = "hv",
widths = c(3, 1), heights = c(1, 3))
ggpubr::ggarrange(plot_x1, NULL, plot_x12, plot_x2,
ncol = 2, nrow = 2,  align = "hv",
widths = c(3, 1), heights = c(1, 2))
ggpubr::ggarrange(plot_x1, NULL, plot_x12, plot_x2,
ncol = 2, nrow = 2,  align = "hv",
widths = c(3, 1), heights = c(1, 3))
ggpubr::ggarrange(plot_x1, NULL, plot_x12, plot_x2,
ncol = 2, nrow = 2,  align = "hv"
# widths = c(3, 1), heights = c(1, 3)
)
ggpubr::ggarrange(plot_x1, NULL, plot_x12, plot_x2,
ncol = 2, nrow = 2,  align = "hv",
widths = c(3, 1)
# heights = c(1, 3)
)
ggpubr::ggarrange(plot_x1, NULL, plot_x12, plot_x2,
ncol = 2, nrow = 2,  align = "hv",
widths = c(3, 1)
heights = c(1, 3)
)
ggpubr::ggarrange(plot_x1, NULL, plot_x12, plot_x2,
ncol = 2, nrow = 2,  align = "hv",
widths = c(3, 1),
heights = c(1, 3)
)
ggpubr::ggarrange(plot_x1, NULL, plot_x12, plot_x2,
ncol = 2, nrow = 2,  align = "hv",
widths = c(3, 1),
heights = c(1, 4)
)
ggpubr::ggarrange(plot_x1, NULL, plot_x12, plot_x2,
ncol = 2, nrow = 2,  align = "hv",
widths = c(2, 1),
heights = c(1, 4)
)
ggpubr::ggarrange(plot_x1, NULL, plot_x12, plot_x2,
ncol = 2, nrow = 2,  align = "hv",
widths = c(5, 1),
heights = c(1, 4)
)
ggpubr::ggarrange(plot_x1, NULL, plot_x12, plot_x2,
ncol = 2, nrow = 2,  align = "hv",
widths = c(5, 2),
heights = c(1, 4)
)
ggpubr::ggarrange(plot_x1, NULL, plot_x12, plot_x2,
ncol = 2, nrow = 2,  align = "hv",
widths = c(5, .1),
heights = c(1, 4)
)
ggpubr::ggarrange(plot_x1, NULL, plot_x12, plot_x2,
ncol = 2, nrow = 2,  align = "hv",
widths = c(5, 1),
heights = c(1, 4)
)
ggpubr::ggarrange(plot_x1, NULL, plot_x12, plot_x2,
ncol = 2, nrow = 2,
widths = c(5, 1),
heights = c(1, 4)
)
plot_x1 <- data.frame(x_1, x_2) %>%
ggplot(aes(x = x_1)) +
geom_dotplot(dotsize = .5) +
geom_density()
ggpubr::ggarrange(plot_x1, NULL, plot_x12, plot_x2,
ncol = 2, nrow = 2,
widths = c(5, 1),
heights = c(1, 4)
)
plot_x1 <- data.frame(x_1, x_2) %>%
ggplot(aes(x = x_1)) +
geom_dotplot(dotsize = .5)
plot_x2 <- data.frame(x_1, x_2) %>%
ggplot(aes(x = x_2)) +
geom_dotplot(dotsize = .5) +
coord_flip()
ggpubr::ggarrange(plot_x1, NULL, plot_x12, plot_x2,
ncol = 2, nrow = 2,
widths = c(5, 1),
heights = c(1, 4)
)
mean(x_1); mean(x_2)
setwd("C:/Users/WYHir/Google Drive/Livros e Apostilas/Multivariada/Johnson and Wichern - Applied Multivariate Statistical Analysis (2007) 6ª Ed/Datasets")
??faces
alpack::faces(iris[,-4])
aplpack::faces(iris[,-4])
aplpack::faces(iris[,-5])
dist(iris[,-5])
q()
